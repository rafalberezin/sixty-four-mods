name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/ci.yaml'
      - 'packages/**'
      - '*'
      - '!.gitignore'
      - '!.release-please-manifest.json'
      - '!LICENSE'
      - '!README.md'
  push:
    branches:
      - master
    paths:
      - '.github/workflows/ci.yaml'
      - 'packages/**'
      - '*'
      - '!.gitignore'
      - '!.release-please-manifest.json'
      - '!LICENSE'
      - '!README.md'

jobs:
  validate-ts:
    name: Validate TS
    runs-on: ubuntu-latest
    if:
      "${{ !contains(github.event.pull_request.labels.*.name, 'autorelease:
      pending') }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Format check
        run: pnpm run format:check

      - name: Lint
        run: pnpm run lint

      - name: Type check
        run: pnpm run typecheck

  validate-go:
    name: Validate Go
    runs-on: ubuntu-latest
    if:
      "${{ !contains(github.event.pull_request.labels.*.name, 'autorelease:
      pending') }}"
    defaults:
      run:
        working-directory: ./packages/modloader/installer

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./packages/modloader/installer/go.mod
          cache-dependency-path: ./packages/modloader/installer/go.sum

      - name: Verify dependencies
        run: go mod verify

      - name: Vet source
        run: |
          make embed-placeholder
          go vet
          make clean

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - validate-ts
      - validate-go

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./packages/modloader/installer/go.mod
          cache-dependency-path: ./packages/modloader/installer/go.sum

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: make all

      - name: Build Cleanup
        if: always()
        run: make clean
