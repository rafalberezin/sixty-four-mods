name: Release Please

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

permissions:
  contents: write
  issues: write # needed for actions to create labels
  pull-requests: write

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.build-meta.outputs.components }}
      released: ${{ steps.release-please.outputs.releases_created }}

    steps:
      - name: Release Please
        id: release-please
        uses: googleapis/release-please-action@v4

      - name: Build changes metadata
        if: ${{ steps.release-please.outputs.releases_created == 'true' }}
        id: build-meta
        run: |
          paths='${{ steps.release-please.outputs.paths_released }}'
          outputs='${{ toJson( steps.release-please.outputs ) }}'

          components="[]"

          for path in $(echo $paths | jq -r '.[]'); do
            name=$(basename "$path")
            latest="${name}-latest"
            tag=$(echo $outputs | jq -r --arg key "$path--tag_name" '.[$key]')
            version=$(echo $outputs | jq -r --arg key "$path--version" '.[$key]')

            components=$(jq -c \
              --arg name "$name" \
              --arg path "$path" \
              --arg tag "$tag" \
              --arg latest "$latest" \
              --arg version "$version" \
              '. + [{name:$name, path:$path, tag:$tag, latest:$latest, version:$version}]' \
              <<< "$components" \
            )
          done

          echo "components=$components" >> $GITHUB_OUTPUT

  release-artifacts:
    name: Release Artifacts
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.released == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./packages/modloader/installer/go.mod
          cache-dependency-path: ./packages/modloader/installer/go.sum

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Artifacts
        run: |
          make all

      - name: Upload Artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags

          components='${{ needs.release-please.outputs.components }}'

          for component in $(echo $components | jq -c '.[]'); do
            name=$(echo $component | jq -r '.name')
            path=$(echo $component | jq -r '.path')
            tag=$(echo $component | jq -r '.tag')
            latest=$(echo $component | jq -r '.latest')
            version=$(echo $component | jq -r '.version')

            echo "Tagging $latest -> $tag"
            git tag -f "$latest" "$tag"
            git push origin -f "$latest"

            echo "Updating artifacts for $name"
            gh release delete "$latest" -y || true

            notes="This is a rolling release that updates automatically.
            For stable versions, use tagged releases instead."

            gh release create "$latest" "$path/dist/*" \
              -t "Latest $name build (v$version)" \
              -n "$notes"

          done

      - name: Build Cleanup
        run: |
          make clean
